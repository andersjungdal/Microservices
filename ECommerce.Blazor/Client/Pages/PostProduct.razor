@page "/postproduct"

@inject ECommerce.Blazor.Client.Services.HttpClientProductsService client
<h1>Create new Product</h1>
@if (product == null)
{
    <p>loading..</p>
}
else
{
    <h4>Product</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">

            <EditForm Model="@product" OnValidSubmit="Submit">


                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <h5>Name</h5>
                    <InputText id="inputRessourceName" class="form-control" placeholder="Navn" @bind-Value="product.Name" />
                </div>
                <div class="form-group">
                    <h5>Price</h5>
                    <InputNumber id="inputRessourceName" class="form-control" placeholder="Navn" @bind-Value="product.Price" />
                </div>
                <div class="form-group">
                    <h5>Inventory</h5>
                    <InputNumber id="inputRessourceName" class="form-control" placeholder="Navn" @bind-Value="product.Inventory" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Opret" class="btn btn-primary" />
                </div>
            </EditForm>
        </div>
    </div>
}
@code {

    //[Parameter]
    //public int Id { get; set; }
    //[Parameter]
    //public string Name { get; set; }
    //[Parameter]
    //public decimal Price { get; set; }
    //[Parameter]
    //public int Inventory { get; set; }

    public ECommerce.Blazor.Shared.Models.Product product { get; set; } = new Blazor.Shared.Models.Product();

    public async void Submit()
    {
        await client.PostProductAsync(product);
    }

}