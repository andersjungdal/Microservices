@page "/chat"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

    <h3>Chat</h3>
    <select @bind="groupName">
        <option value="testroom1">rum1</option>
        <option value="testroom2">rum2</option>
        <option value="testroom3">rum3</option>
        <option value="testroom4">rum4</option>
    </select>
<div class="form-group">
    <label>
        User:
        <input @bind="userName" />
    </label>
</div>
<div class="form-group">
    <label>
        Message:
        <input @bind="userMessage" size="50" />
    </label>
</div>
<button @onclick="JoinGroup">Join</button>
<button @onclick="SendGroup">Send</button>

<hr>

<ul id="messagesList">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection chatHubConnection;
    private string userName;
    private string userMessage;
    private List<string> messages = new List<string>();
    private string groupName;

    protected override async Task OnInitializedAsync()
    {

        //chatHubConnection = new HubConnectionBuilder(
        //    ).WithUrl("https://localhost:5001/ChatHub").Build();

        chatHubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/ChatHub"))
        .Build();

        chatHubConnection.On<string>("NewUserEntered",(x) =>
        {
            string encodedMessage = x;
            messages.Add(encodedMessage);
            StateHasChanged();

        });
        chatHubConnection.On<string>("SendMessageToGroup", (x) =>
        {
            string krypteretBesked = x;
            messages.Add(krypteretBesked);
            StateHasChanged();
        });

        await chatHubConnection.StartAsync();

        //return base.OnInitializedAsync();
    }

    Task JoinGroup() => chatHubConnection.SendAsync("JoinGroup", "test");

    Task SendGroup() => chatHubConnection.SendAsync("SendGroup", userMessage, "test");

    //IsConnected => chatHubConnection.State == HubConnectionState.Connected;

}
