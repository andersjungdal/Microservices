@page "/getproducts"

@inject ECommerce.Blazor.Client.Services.HttpClientProductsService client
<h1>get all products</h1>
@if (result == null)
{
    <p>loading..</p>
}
else
{
    <h4>Product</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">

            <EditForm Model="@products" OnValidSubmit="Submit">

                @foreach (var product in result.product)
                {
                    <td>
                        @product.Inventory
                        @product.Name
                        @product.Price
                    </td>
                    <br>
                }

                <div class="form-group">
                    <input type="submit" value="Opret" class="btn btn-primary" />
                </div>
            </EditForm>
        </div>
    </div>
}
@code {

    //[Parameter]
    //public int Id { get; set; }
    //[Parameter]
    //public string Name { get; set; }
    //[Parameter]
    //public decimal Price { get; set; }
    //[Parameter]
    //public int Inventory { get; set; }

    //public List<ECommerce.Blazor.Shared.Models.Product> products = new List<ECommerce.Blazor.Shared.Models.Product>();

    //protected override async Task OnInitializedAsync()
    //{
    //    products = await Http.GetJsonAsync<ECommerce.Blazor.Shared.Models.Product[]>("Product");
    //}

    List<ECommerce.Blazor.Shared.Models.Product> result = new List<ECommerce.Blazor.Shared.Models.Product>();

    public async void Submit()
    {
        result = await client.GetAllProductsAsync();

        await client.GetAllProductsAsync();
    }

}