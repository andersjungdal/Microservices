@page "/chatroom3/{userName}/{groupName}"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

<h3>@groupName</h3>

<h1>@userName</h1>

@if (!userConnected)
{
    <button @onclick="JoinGroup">Join</button>
}
else
{
    <div class="form-group">
        <label>
            Message:
            <input @bind="userMessage" size="50" />
        </label>
    </div>

    <button @onclick="LeaveGroup">Leave</button>

    <button @onclick="SendGroup">Send</button>

    <ul id="messagesList">
        @foreach (var message in messages)
        {
            <li>@message</li>
        }
    </ul>
}

@code {

    [Parameter]
    public string userName { get; set; }
    [Parameter]
    public string groupName { get; set; }

    private HubConnection chatHubConnection;

    private string userMessage;

    private List<string> messages = new List<string>();
    private bool userConnected;

    protected override async Task OnInitializedAsync()
    {

        chatHubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/ChatHub"))
        .Build();

        chatHubConnection.On<string>("NewUserEntered", (x) =>
        {
            string encodedMessage = x;
            userConnected = true;
            StateHasChanged();

        });
        chatHubConnection.On<string>("SendMessageToGroup", (x) =>
        {
            string encodedMessage = x;
            messages.Add(encodedMessage);
            userMessage = "";
            StateHasChanged();
        });
        chatHubConnection.On<string>("UserLeaved", (x) =>
        {
            string encodedMessage = x;
            userConnected = false;
            userMessage = "";
            StateHasChanged();
        });

        await chatHubConnection.StartAsync();

    }

    Task JoinGroup() => chatHubConnection.SendAsync("JoinGroup", groupName);

    Task SendGroup() => chatHubConnection.SendAsync("SendGroup", $"{userName}: " + userMessage, groupName);

    Task LeaveGroup() => chatHubConnection.SendAsync("LeaveGroup", groupName);

}
